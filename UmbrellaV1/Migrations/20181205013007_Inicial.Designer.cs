// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UmbrellaV1.Models;

namespace UmbrellaV1.Migrations
{
    [DbContext(typeof(umbrella_v1Context))]
    [Migration("20181205013007_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UmbrellaV1.Models.Advertisement", b =>
                {
                    b.Property<long>("AdvertisementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CityId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<long>("SubCategoryId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long>("UserId");

                    b.HasKey("AdvertisementId");

                    b.HasIndex("CityId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisement");
                });

            modelBuilder.Entity("UmbrellaV1.Models.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("UmbrellaV1.Models.City", b =>
                {
                    b.Property<long>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("UmbrellaV1.Models.Image", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AdvertisementId");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Secuencial");

                    b.HasKey("ImageId");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("UmbrellaV1.Models.Role", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("UmbrellaV1.Models.SubCategory", b =>
                {
                    b.Property<long>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("UmbrellaV1.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("Cell")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<long>("CityId");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<long>("RoleId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("UmbrellaV1.Models.Advertisement", b =>
                {
                    b.HasOne("UmbrellaV1.Models.City", "City")
                        .WithMany("Advertisement")
                        .HasForeignKey("CityId");

                    b.HasOne("UmbrellaV1.Models.SubCategory", "SubCategory")
                        .WithMany("Advertisement")
                        .HasForeignKey("SubCategoryId");

                    b.HasOne("UmbrellaV1.Models.User", "User")
                        .WithMany("Advertisement")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("UmbrellaV1.Models.Image", b =>
                {
                    b.HasOne("UmbrellaV1.Models.Advertisement", "Advertisement")
                        .WithMany("Image")
                        .HasForeignKey("AdvertisementId");
                });

            modelBuilder.Entity("UmbrellaV1.Models.SubCategory", b =>
                {
                    b.HasOne("UmbrellaV1.Models.Category", "Category")
                        .WithMany("SubCategory")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("UmbrellaV1.Models.User", b =>
                {
                    b.HasOne("UmbrellaV1.Models.City", "City")
                        .WithMany("User")
                        .HasForeignKey("CityId");

                    b.HasOne("UmbrellaV1.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
